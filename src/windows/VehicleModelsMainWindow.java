/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import engine.MotoGarageNotebookEngine;
import informationwindows.DialogType;
import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;
import objectmodels.VehicleModel;

/**
 *
 * @author Mark
 */

public class VehicleModelsMainWindow extends javax.swing.JDialog {
    private MotoGarageNotebookEngine motoGarageNotebookEngine;

    /**
     * Creates new form VehicleModelsMainWindow
     */
    public VehicleModelsMainWindow() {
        initComponents();
    }

         /**
     * Creates new form MaintenanceTypesMainWindow
     */
    public VehicleModelsMainWindow(java.awt.Frame parent,boolean modal,MotoGarageNotebookEngine incomingMotoGarageNotebookEngine) {
        super(parent, modal);
        this.motoGarageNotebookEngine = incomingMotoGarageNotebookEngine;
        initComponents();
        this.setIcon();
        this.setTitle("Vehicle Models");
        this.refreshVehicleModelTable();
    }
    
    private void setIcon(){
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mechanicIcon.png")));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/MGFavicon.png")));
    }
    
        /**
     * Method used to refresh the Maintenance Type Table
     */
    public void refreshVehicleModelTable(){
        
        DefaultTableModel model = (DefaultTableModel) vehicleModelsJTable.getModel();

        int rowCount = model.getRowCount();
        //Integer currentRowSelected = maintenanceTypesTable.getSelectedRow();
        // remove all mechanics
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        if(this.motoGarageNotebookEngine.getVehicleModelArray().length>0){
            VehicleModel[] vehicleModels = this.motoGarageNotebookEngine.getVehicleModelArray();
            int newRowCount = vehicleModels.length;
            for (int i = 0  ; i <newRowCount ; i++) {
                Object[]VehicleModelObject = vehicleModels[i].getVehicleModelObject();
                model.addRow(VehicleModelObject);       
            }
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        vehicleModelToolBar = new javax.swing.JToolBar();
        vehicleModelAddButton = new javax.swing.JButton();
        vehicleModelEditButton = new javax.swing.JButton();
        vehicleModelDeleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehicleModelsJTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vehicleModelToolBar.setFloatable(false);
        vehicleModelToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        vehicleModelToolBar.setRollover(true);

        vehicleModelAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehicleModel32x32ADD.png"))); // NOI18N
        vehicleModelAddButton.setFocusable(false);
        vehicleModelAddButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vehicleModelAddButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        vehicleModelAddButton.setToolTipText("Add a Vehicle Model");
        vehicleModelAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleModelAddButtonActionPerformed(evt);
            }
        });
        vehicleModelToolBar.add(vehicleModelAddButton);

        vehicleModelEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehicleModel32x32EDIT.png"))); // NOI18N
        vehicleModelEditButton.setFocusable(false);
        vehicleModelEditButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vehicleModelEditButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        vehicleModelEditButton.setToolTipText("Edit a Vehicle Model");
        vehicleModelEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleModelEditButtonActionPerformed(evt);
            }
        });
        vehicleModelToolBar.add(vehicleModelEditButton);

        vehicleModelDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehicleModel32x32DELETE.png"))); // NOI18N
        vehicleModelDeleteButton.setFocusable(false);
        vehicleModelDeleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vehicleModelDeleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        vehicleModelDeleteButton.setToolTipText("Delete a Vehicle Model");
        vehicleModelDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleModelDeleteButtonActionPerformed(evt);
            }
        });
        vehicleModelToolBar.add(vehicleModelDeleteButton);

        vehicleModelsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Make", "Model","Type"
            }
        ));
        vehicleModelsJTable.setOpaque(true);
        vehicleModelsJTable.setFillsViewportHeight(true);
        vehicleModelsJTable.setBackground(Color.WHITE);
        jScrollPane1.setViewportView(vehicleModelsJTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleModelToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(vehicleModelToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(closeButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void vehicleModelAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleModelAddButtonActionPerformed
        // TODO add your handling code here:
        this.motoGarageNotebookEngine.startNewVehicleModelWindow(this);
    }//GEN-LAST:event_vehicleModelAddButtonActionPerformed

    private void vehicleModelEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleModelEditButtonActionPerformed
        // TODO add your handling code here:
        int rowSelected = this.vehicleModelsJTable.getSelectedRow();
        if(rowSelected>-1){
            VehicleModel[] vehicleModels = this.motoGarageNotebookEngine.getVehicleModelArray();
            VehicleModel selectedVehicleModel = vehicleModels[rowSelected];
            this.motoGarageNotebookEngine.startUpdateVehicleModelWindow(this, selectedVehicleModel);
        }else{
            this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "You need to select a Vehicle Type to edit.");
        }
        
    }//GEN-LAST:event_vehicleModelEditButtonActionPerformed

    private void vehicleModelDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleModelDeleteButtonActionPerformed
        // TODO add your handling code here:
        
        int rowSelected = this.vehicleModelsJTable.getSelectedRow();

        if(rowSelected==-1){
            this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "You need to select a Vehicle Type to delete.");
            return;
        }
        boolean sureToDelete = this.motoGarageNotebookEngine.getDialogFactory().createConfirmMessage(this,"Are you sure you wish to delete the Vehicle Type? This is permanent!");
        if(sureToDelete){
            VehicleModel[] vehicleModel = this.motoGarageNotebookEngine.getVehicleModelArray();
            VehicleModel selectedVehicleModel = vehicleModel[rowSelected];
            if(this.motoGarageNotebookEngine.deleteVehicleModel(selectedVehicleModel)){
                this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "Vehicle Type deleted successfully!");
                this.refreshVehicleModelTable();
            }else{
                this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.ERROR_MESSAGE, "Error attempting to delete Vehicle Type! :( Please report!");
            }
//            
        }
    }//GEN-LAST:event_vehicleModelDeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleModelsMainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton vehicleModelAddButton;
    private javax.swing.JButton vehicleModelDeleteButton;
    private javax.swing.JButton vehicleModelEditButton;
    private javax.swing.JToolBar vehicleModelToolBar;
    private javax.swing.JTable vehicleModelsJTable;
    // End of variables declaration//GEN-END:variables
}

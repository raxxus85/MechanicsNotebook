/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import engine.MotoGarageNotebookEngine;
import informationwindows.DialogType;
import java.awt.Component;
import java.awt.Toolkit;
import java.util.Date;
import java.util.Properties;
import javax.swing.ImageIcon;
import objectmodels.MaintenanceAction;
import objectmodels.MaintenanceType;
import objectmodels.Vehicle;
import objectmodels.VehicleMaintenanceType;
import objectmodels.VehicleModel;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author Mark
 */
public class NewMaintenanceActionWindow extends javax.swing.JDialog {
    private MotoGarageNotebookEngine motoGarageNotebookEngine;

    /**
     * Creates new form NewMaintenanceActionWindow
     */
    public NewMaintenanceActionWindow() {
        initComponents();
    }
    
     /**
     * Creates new form NewMaintenanceActionWindow
     */
    public NewMaintenanceActionWindow(java.awt.Frame parent,boolean modal,MotoGarageNotebookEngine incomingMotoGarageMechanicEngine) {
        super(parent, modal);
        this.motoGarageNotebookEngine= incomingMotoGarageMechanicEngine;
        Vehicle currentVehicle = this.motoGarageNotebookEngine.getCurrentVehicle();
        initComponents();
        //this.setLocationRelativeTo(incomingParent);
        this.currentVehicleTextField.setText(currentVehicle.toString());
        this.maintenenaceActionMileageTextField.setText(currentVehicle.getOdometer().toString());
        this.setIcon();
        this.setTitle("New Maintenance Action");
        
        Date currentDate = new Date();
        this.datePerformedDatePicker.setDate(currentDate);
        
        // maintenance types stuff
        if(this.motoGarageNotebookEngine.getMaintenaceTypeArray().length>0){
            maintenanceTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(motoGarageNotebookEngine.getMaintenaceTypeArray()));
            this.maintenanceTypeJComboBox.setEnabled(true);
            this.generalRadioButton.setEnabled(true);
        }else{
            this.maintenanceTypeJComboBox.setEnabled(false);
            this.generalRadioButton.setEnabled(false);
            this.generalRadioButton.setSelected(false);
        }
        
        
        // vehicle specific stuff
        if(!currentVehicle.getVehicleModel().getVehicleMaintenanceTypesList().isEmpty()){
            VehicleModel currentVehicleModel = currentVehicle.getVehicleModel();
            vehicleMaintenanceTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(motoGarageNotebookEngine.getVehicleMaintenanceTypesArray(currentVehicleModel)));

            this.vehicleMaintenanceTypeJComboBox.setEnabled(true);
            this.modelSpecificRadioButton.setEnabled(true);
        }else{
            this.vehicleMaintenanceTypeJComboBox.setEnabled(false);
            this.modelSpecificRadioButton.setEnabled(false);
            this.modelSpecificRadioButton.setSelected(false);
        }
        
    }
    
    private void setIcon(){
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mechanicIcon.png")));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/MGFavicon.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        addMaintenanceActionButton = new javax.swing.JButton();
        ImageIcon test = new javax.swing.ImageIcon(getClass().getResource("/MGLogoTrans2.png"));
        jPanel1 = new ImagePanel(test.getImage());
        currentVehicleTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        mechanicTextField = new javax.swing.JTextField();
        mechanicLabel = new javax.swing.JLabel();
        maintenanceTypeJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        maintenenaceActionMileageTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        maintenanceActionNotesTextArea = new javax.swing.JTextArea();
        maintenanceActionNotesLabel = new javax.swing.JLabel();
        datePerformedDatePicker = new org.jdesktop.swingx.JXDatePicker();
        datePerformedLabel = new javax.swing.JLabel();
        vehicleMaintenanceTypeJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        modelSpecificRadioButton = new javax.swing.JRadioButton();
        generalRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addMaintenanceActionButton.setText("Add");
        addMaintenanceActionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaintenanceActionButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        currentVehicleTextField.setEditable(false);
        currentVehicleTextField.setFocusable(false);

        jLabel5.setText("Vehicle ");

        mechanicTextField.setText(motoGarageNotebookEngine.getCurrentMechanic().toString());
        mechanicTextField.setEditable(false);
        mechanicTextField.setFocusable(false);

        mechanicLabel.setText("Mechanic");

        maintenanceTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(motoGarageNotebookEngine.getMaintenaceTypeArray()));

        jLabel2.setText("General Maintenance Type");

        jLabel3.setText("Odometer");

        maintenanceActionNotesTextArea.setColumns(20);
        maintenanceActionNotesTextArea.setRows(5);
        maintenanceActionNotesTextArea.setLineWrap(true);
        jScrollPane1.setViewportView(maintenanceActionNotesTextArea);

        maintenanceActionNotesLabel.setText("Notes");

        datePerformedLabel.setText("Date Performed");

        vehicleMaintenanceTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));

        jLabel1.setText("Model Specific Maintenance Type");

        modelSpecificRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelSpecificRadioButtonActionPerformed(evt);
            }
        });

        generalRadioButton.setSelected(true);
        generalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generalRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(maintenanceActionNotesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mechanicLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(generalRadioButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(modelSpecificRadioButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel1)))
                            .addComponent(datePerformedLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maintenenaceActionMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(vehicleMaintenanceTypeJComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 194, Short.MAX_VALUE)
                                .addComponent(mechanicTextField)
                                .addComponent(maintenanceTypeJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentVehicleTextField))
                            .addComponent(datePerformedDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(currentVehicleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mechanicLabel)
                    .addComponent(mechanicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maintenanceTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(generalRadioButton)
                        .addGap(5, 5, 5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vehicleMaintenanceTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maintenenaceActionMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datePerformedDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePerformedLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maintenanceActionNotesLabel)))
                    .addComponent(modelSpecificRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(addMaintenanceActionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addGap(62, 62, 62))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMaintenanceActionButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addMaintenanceActionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaintenanceActionButtonActionPerformed
        // TODO add your handling code here:
        if(this.maintenenaceActionMileageTextField.equals("") || this.maintenanceActionNotesTextArea.equals("")){
            System.out.println("FAIL");
            return;
        }else{
            if(this.generalRadioButton.isSelected()){
                MaintenanceAction newMaintenanceAction = new MaintenanceAction(this.motoGarageNotebookEngine.getCurrentMechanic(),this.motoGarageNotebookEngine.getCurrentVehicle(),
                (MaintenanceType)this.maintenanceTypeJComboBox.getSelectedItem(),
                Integer.parseInt(this.maintenenaceActionMileageTextField.getText()),this.datePerformedDatePicker.getDate(),this.maintenanceActionNotesTextArea.getText());
                this.motoGarageNotebookEngine.addMaintenanceAction(newMaintenanceAction);
                if(this.motoGarageNotebookEngine.getCurrentVehicle().getOdometer()<(newMaintenanceAction.getOdometer())){
                    this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "Vehicle Odometer updated from " 
                        + this.motoGarageNotebookEngine.getCurrentVehicle().getOdometer().toString() + " miles to " +
                    newMaintenanceAction.getOdometer().toString() + " miles.");
                    this.motoGarageNotebookEngine.updateVehicleMileage(newMaintenanceAction.getOdometer());
                }
            }else if(this.modelSpecificRadioButton.isSelected()){
                //VehicleModel currentVehicleModel = this.motoGarageNotebookEngine.getCurrentVehicle().getVehicleModel();
                MaintenanceAction newMaintenanceAction = new MaintenanceAction(this.motoGarageNotebookEngine.getCurrentMechanic(),this.motoGarageNotebookEngine.getCurrentVehicle(),
                (VehicleMaintenanceType)this.vehicleMaintenanceTypeJComboBox.getSelectedItem(),
                Integer.parseInt(this.maintenenaceActionMileageTextField.getText()),this.datePerformedDatePicker.getDate(),this.maintenanceActionNotesTextArea.getText());
                this.motoGarageNotebookEngine.addMaintenanceAction(newMaintenanceAction);
                if(this.motoGarageNotebookEngine.getCurrentVehicle().getOdometer()<(newMaintenanceAction.getOdometer())){
                    this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "Vehicle Odometer updated from " 
                        + this.motoGarageNotebookEngine.getCurrentVehicle().getOdometer().toString() + " miles to " +
                    newMaintenanceAction.getOdometer().toString() + " miles.");
                    this.motoGarageNotebookEngine.updateVehicleMileage(newMaintenanceAction.getOdometer());
                }
        }


        }
        this.dispose();
    }//GEN-LAST:event_addMaintenanceActionButtonActionPerformed

    private void generalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalRadioButtonActionPerformed
        // TODO add your handling code here:
        this.generalRadioButton.setSelected(true);
        this.modelSpecificRadioButton.setSelected(false);
    }//GEN-LAST:event_generalRadioButtonActionPerformed

    private void modelSpecificRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelSpecificRadioButtonActionPerformed
        // TODO add your handling code here:
        this.generalRadioButton.setSelected(false);
        this.modelSpecificRadioButton.setSelected(true);
    }//GEN-LAST:event_modelSpecificRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMaintenanceActionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMaintenanceActionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMaintenanceActionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMaintenanceActionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMaintenanceActionWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMaintenanceActionButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField currentVehicleTextField;
    private org.jdesktop.swingx.JXDatePicker datePerformedDatePicker;
    private javax.swing.JLabel datePerformedLabel;
    private javax.swing.JRadioButton generalRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maintenanceActionNotesLabel;
    private javax.swing.JTextArea maintenanceActionNotesTextArea;
    private javax.swing.JComboBox maintenanceTypeJComboBox;
    private javax.swing.JTextField maintenenaceActionMileageTextField;
    private javax.swing.JLabel mechanicLabel;
    private javax.swing.JTextField mechanicTextField;
    private javax.swing.JRadioButton modelSpecificRadioButton;
    private javax.swing.JComboBox vehicleMaintenanceTypeJComboBox;
    // End of variables declaration//GEN-END:variables
}

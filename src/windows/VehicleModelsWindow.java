/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import engine.MotoGarageNotebookEngine;
import informationwindows.DialogType;
import java.awt.Toolkit;
import objectmodels.VehicleModel;
import objectmodels.VehicleType;

/**
 *
 * @author Mark
 */
public class VehicleModelsWindow extends javax.swing.JDialog {
    private MotoGarageNotebookEngine motoGarageNotebookEngine;
    private VehicleModelsMainWindow vehicleModelsMainWindow;
    private boolean updatingVehicleModel = false;
    private VehicleModel originalVehicleModel = null;
    
    
    /**
     * DON"T USE!!!!
     * @param parent
     * @param modal 
     */
    public VehicleModelsWindow(java.awt.Frame parent,boolean modal){
        super(parent, modal);
        initComponents();
    }
    
    /**
     * Creates new form vehicleModelsWindow
     */
    public VehicleModelsWindow(java.awt.Frame parent,boolean modal,VehicleModelsMainWindow incomingVehicleModelsMainWindow 
            ,MotoGarageNotebookEngine incomingMotoGarageNotebookEngine) {
        super(parent, modal);
        this.motoGarageNotebookEngine= incomingMotoGarageNotebookEngine;
        this.vehicleModelsMainWindow = incomingVehicleModelsMainWindow;
        initComponents();
        this.setIcon();
        this.setTitle("Create Vehicle Model");
        this.createOrUpdateButton.setText("Create Vehicle Model");
        
        // we are ASSUMING they are creating a motorcycle vehicle type... it is for MotoGarage afterall...
        this.motorcycleRadioButton.setSelected(true);
    }
    
    /**
     * Creates new form vehicleModelsWindow
     * <li> used when UPDATING vehicle model
     */
    public VehicleModelsWindow(java.awt.Frame parent,boolean modal,VehicleModelsMainWindow incomingVehicleModelsMainWindow 
            ,MotoGarageNotebookEngine incomingMotoGarageNotebookEngine, VehicleModel incomingVehicleModel) {
        super(parent, modal);
        this.motoGarageNotebookEngine= incomingMotoGarageNotebookEngine;
        this.vehicleModelsMainWindow = incomingVehicleModelsMainWindow;
        initComponents();
        this.setIcon();
        this.setTitle("Update Vehicle Model");
        this.createOrUpdateButton.setText("Update Vehicle Model");
        
        this.updatingVehicleModel = true;
        this.originalVehicleModel = incomingVehicleModel;
        
        this.makeTextField.setText(incomingVehicleModel.getMake());
        this.modelTextField.setText(incomingVehicleModel.getModel());
        
        if(incomingVehicleModel.getVehicleType().equals(VehicleType.CARORTRUCK)){
            this.motorcycleRadioButton.setSelected(false);
            this.carTruckRadioButton.setSelected(true);
        }else if(incomingVehicleModel.getVehicleType().equals(VehicleType.MOTORCYCLE)){
            this.motorcycleRadioButton.setSelected(true);
            this.carTruckRadioButton.setSelected(false);
        }

    }

    private void setIcon(){
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mechanicIcon.png")));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/MGFavicon.png")));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        makeLabel = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        makeTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        motorcycleRadioButton = new javax.swing.JRadioButton();
        carTruckRadioButton = new javax.swing.JRadioButton();
        createOrUpdateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        makeLabel.setText("Make");

        modelLabel.setText("Model");

        motorcycleRadioButton.setText("Motorcycle");
        motorcycleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motorcycleRadioButtonActionPerformed(evt);
            }
        });

        carTruckRadioButton.setText("Car / Truck");
        carTruckRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carTruckRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(modelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(makeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(motorcycleRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(carTruckRadioButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motorcycleRadioButton)
                    .addComponent(carTruckRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeLabel)
                    .addComponent(makeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelLabel))
                .addContainerGap())
        );

        createOrUpdateButton.setText("Create or Update");
        createOrUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createOrUpdateButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createOrUpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(createOrUpdateButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void createOrUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createOrUpdateButtonActionPerformed
        // TODO add your handling code here:
        // Basic Checks
        if(this.makeTextField.getText().equals("")|| this.modelTextField.getText().equals("")){
            this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.WARNING_MESSAGE, "A Vehicle Model requires a Make and Model.");
            return;
        }
        String newMake = this.makeTextField.getText();
        String newModel = this.modelTextField.getText();
        
        VehicleType vehicleType = null;
        if(this.motorcycleRadioButton.isSelected()){
            vehicleType = VehicleType.MOTORCYCLE;
        }else if(this.carTruckRadioButton.isSelected()){
            vehicleType = VehicleType.CARORTRUCK;
        }
        VehicleModel newVehicleModel = new VehicleModel(newMake,newModel,vehicleType);       
        // onto create / update
        if(this.updatingVehicleModel){
            boolean updatedVehicleModel = this.motoGarageNotebookEngine.updateVehicleModel(originalVehicleModel, newVehicleModel);
        
            if(updatedVehicleModel){
                this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "Vehicle Model has been updated!");
                this.vehicleModelsMainWindow.refreshVehicleModelTable();
            }else{
                this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.ERROR_MESSAGE, "An error occured attempting to update the Vehicle Model!");
            }
            this.dispose();
        }else{
            this.motoGarageNotebookEngine.createNewVehicleModel(newVehicleModel);
            this.motoGarageNotebookEngine.getDialogFactory().createDialogMessage(this,DialogType.INFORMATION_MESSAGE, "New Vehicle Model," + newVehicleModel.toString() + ", has been created!");
            // REFRESH
            this.vehicleModelsMainWindow.refreshVehicleModelTable();
            this.dispose();
        }
    }//GEN-LAST:event_createOrUpdateButtonActionPerformed

    private void motorcycleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motorcycleRadioButtonActionPerformed
        // TODO add your handling code here:
        this.carTruckRadioButton.setSelected(false);
    }//GEN-LAST:event_motorcycleRadioButtonActionPerformed

    private void carTruckRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carTruckRadioButtonActionPerformed
        // TODO add your handling code here:
        this.motorcycleRadioButton.setSelected(false);
    }//GEN-LAST:event_carTruckRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleModelsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VehicleModelsWindow dialog = new VehicleModelsWindow(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton carTruckRadioButton;
    private javax.swing.JButton createOrUpdateButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel makeLabel;
    private javax.swing.JTextField makeTextField;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JRadioButton motorcycleRadioButton;
    // End of variables declaration//GEN-END:variables
}
